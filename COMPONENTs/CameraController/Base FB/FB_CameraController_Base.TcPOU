<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_CameraController_Base" Id="{21d15419-3dbd-4cae-9427-a2dd23ad5731}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'no_explicit_call' := 'Do not call the body - Stick to OOP'}
FUNCTION_BLOCK ABSTRACT FB_CameraController_Base EXTENDS FB_CH_Object IMPLEMENTS I_CameraController_Base
VAR
	ipVisionSystem		: I_VisionSystem;			//Interface to "Owner" of this module. Visionsystem
	fbAlarmGeneral 		: FB_TcAlarm;				// Terminal general alarm
	{attribute 'hide'}  						
	fbFeedback 				: FB_CH_Feedback(THIS^.fbSourceInfo);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="Busy" Id="{7e21e62f-b21d-4007-8961-e376cc2aab4a}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
//Module already has a task - already a trigger active
PROPERTY ABSTRACT Busy : BOOL]]></Declaration>
      <Get Name="Get" Id="{1e3c314d-02a4-456e-ad0b-7ab3668f18b6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{2e73610a-12ec-4c3e-9203-e9048ec5fe9e}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
VAR_INST
	{attribute 'hide'}
	bFBInitCalledOnce : BOOL; //Do the following code once during start up and not during onlinechange
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Do the following code once during start up and not during onlinechange
IF NOT bFBInitCalledOnce THEN 
	
	;

END_IF

bFBInitCalledOnce := TRUE;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Feedback" Id="{0634b243-a295-421e-ba22-9b45a302d711}">
      <Declaration><![CDATA[{attribute 'monitoring':='call'}
PROPERTY Feedback : I_CH_Feedback]]></Declaration>
      <Get Name="Get" Id="{4826c508-71f8-46bb-8169-e8dddc9a7fc5}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Feedback := THIS^.fbFeedback;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="NextPossibleTriggerTime" Id="{45d94320-b864-4aff-93d6-412f96bd5a51}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY NextPossibleTriggerTime : T_DCTIME64]]></Declaration>
      <Get Name="Get" Id="{a4f08291-be5b-4bda-a7e1-fc87aaa477c7}">
        <Declaration><![CDATA[VAR
	nEtherCatCycles 	: UINT;	
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[//If attribute 'TcCallAfterOutputUpdate' is set, it takes 1 cycle more to send timestamp to hardware
IF TwinCAT_SystemInfoVarList._TaskInfo[THIS^.TaskIndex].InCallAfterOutputUpdate THEN
	nEtherCatCycles := 3;
ELSE
	nEtherCatCycles := 2;
END_IF


NextPossibleTriggerTime := F_GetCurDcTaskTime64()(*1ns*) + (THIS^.ipVisionSystem.TaskCycleTimeNs(*1ns*) * nEtherCatCycles (*Cycles*)) + 300_000(*300us(determined by testing)*);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Operational" Id="{f9be7c63-4fd6-4b11-bad8-d852a57c4fea}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY Operational : BOOL]]></Declaration>
      <Get Name="Get" Id="{e4ba93cf-c1a0-4418-b38b-b5471640202b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Operational := TRUE;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Reset" Id="{b241af3e-d4cc-4620-b081-3b080713ec88}">
      <Declaration><![CDATA[METHOD ABSTRACT Reset : HRESULT
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetParent" Id="{4c83077d-297d-49ba-a5fd-a1f9869633aa}">
      <Declaration><![CDATA[METHOD SetParent
VAR_INPUT
	ipVisionSystem  : I_VisionSystem;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.ipVisionSystem := ipVisionSystem;]]></ST>
      </Implementation>
    </Method>
    <Property Name="State" Id="{2528c807-50a6-46e6-b63b-b356e8a2ba3b}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY PUBLIC State : E_StateTerminal]]></Declaration>
      <Get Name="Get" Id="{951acb34-9fe9-4833-916f-b0535c9c470f}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[State := E_StateTerminal.READY;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Trigger" Id="{d6c0fcaa-3742-4b57-b29d-4ce7a747068a}">
      <Declaration><![CDATA[METHOD ABSTRACT Trigger : HRESULT
VAR_INPUT
	//The data type T_DCTIME64 represents the distributed clock system time (abbreviated as DC time) as a linear 64-bit integer value. 
	//The time is expressed in nanoseconds since 1/1/2000 UTC. The smallest unit is a nanosecond.
	//F_GetCurDcTickTime64()
	nDCTimeStamp	: T_DCTIME64;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>